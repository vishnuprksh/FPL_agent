import sqlite3
from fpl_agent.database_connection import get_connection

def init_db():
    """Initialize the database and create tables if they don't exist."""
    conn = get_connection()
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS teams (
                    id INTEGER PRIMARY KEY,
                    code INTEGER,
                    draw INTEGER,
                    form REAL,
                    loss INTEGER,
                    name TEXT,
                    played INTEGER,
                    points INTEGER,
                    position INTEGER,
                    short_name TEXT,
                    strength INTEGER,
                    team_division INTEGER,
                    unavailable BOOLEAN,
                    win INTEGER,
                    strength_overall_home INTEGER,
                    strength_overall_away INTEGER,
                    strength_attack_home INTEGER,
                    strength_attack_away INTEGER,
                    strength_defence_home INTEGER,
                    strength_defence_away INTEGER,
                    pulse_id INTEGER
                )''')
    c.execute('''CREATE TABLE IF NOT EXISTS players (
                    assists INTEGER,
                    birth_date TEXT,
                    bonus INTEGER,
                    bps INTEGER,
                    can_select BOOLEAN,
                    can_transact BOOLEAN,
                    chance_of_playing_next_round REAL,
                    chance_of_playing_this_round REAL,
                    clean_sheets INTEGER,
                    clean_sheets_per_90 TEXT,
                    clearances_blocks_interceptions INTEGER,
                    player_code INTEGER,
                    corners_and_indirect_freekicks_order INTEGER,
                    corners_and_indirect_freekicks_text TEXT,
                    cost_change_event INTEGER,
                    cost_change_event_fall INTEGER,
                    cost_change_start INTEGER,
                    cost_change_start_fall INTEGER,
                    creativity TEXT,
                    creativity_rank INTEGER,
                    creativity_rank_type INTEGER,
                    defensive_contribution INTEGER,
                    defensive_contribution_per_90 TEXT,
                    direct_freekicks_order INTEGER,
                    direct_freekicks_text TEXT,
                    dreamteam_count INTEGER,
                    element_type INTEGER,
                    ep_next TEXT,
                    ep_this TEXT,
                    event_points INTEGER,
                    expected_assists TEXT,
                    expected_assists_per_90 TEXT,
                    expected_goal_involvements TEXT,
                    expected_goal_involvements_per_90 TEXT,
                    expected_goals TEXT,
                    expected_goals_conceded TEXT,
                    expected_goals_conceded_per_90 TEXT,
                    expected_goals_per_90 TEXT,
                    first_name TEXT,
                    form TEXT,
                    form_rank INTEGER,
                    form_rank_type INTEGER,
                    goals_conceded INTEGER,
                    goals_conceded_per_90 TEXT,
                    goals_scored INTEGER,
                    has_temporary_code BOOLEAN,
                    ict_index TEXT,
                    ict_index_rank INTEGER,
                    ict_index_rank_type INTEGER,
                    season_id INTEGER PRIMARY KEY,
                    in_dreamteam BOOLEAN,
                    influence TEXT,
                    influence_rank INTEGER,
                    influence_rank_type INTEGER,
                    minutes INTEGER,
                    news TEXT,
                    news_added TEXT,
                    now_cost INTEGER,
                    now_cost_rank INTEGER,
                    now_cost_rank_type INTEGER,
                    opta_code INTEGER,
                    own_goals INTEGER,
                    penalties_missed INTEGER,
                    penalties_order INTEGER,
                    penalties_saved INTEGER,
                    penalties_text TEXT,
                    photo TEXT,
                    points_per_game TEXT,
                    points_per_game_rank INTEGER,
                    points_per_game_rank_type INTEGER,
                    recoveries INTEGER,
                    red_cards INTEGER,
                    region INTEGER,
                    removed BOOLEAN,
                    saves INTEGER,
                    saves_per_90 TEXT,
                    second_name TEXT,
                    selected_by_percent TEXT,
                    selected_rank INTEGER,
                    selected_rank_type INTEGER,
                    special BOOLEAN,
                    squad_number INTEGER,
                    starts INTEGER,
                    starts_per_90 TEXT,
                    status TEXT,
                    tackles INTEGER,
                    team INTEGER,
                    team_code INTEGER,
                    team_join_date TEXT,
                    threat TEXT,
                    threat_rank INTEGER,
                    threat_rank_type INTEGER,
                    total_points INTEGER,
                    transfers_in INTEGER,
                    transfers_in_event INTEGER,
                    transfers_out INTEGER,
                    transfers_out_event INTEGER,
                    value_form TEXT,
                    value_season TEXT,
                    web_name TEXT,
                    yellow_cards INTEGER,
                    season TEXT
                )''')
    c.execute('''CREATE TABLE IF NOT EXISTS player_history (
                    assists INTEGER,
                    bonus INTEGER,
                    bps INTEGER,
                    clean_sheets INTEGER,
                    clearances_blocks_interceptions INTEGER,
                    creativity REAL,
                    defensive_contribution INTEGER,
                    expected_assists REAL,
                    expected_goal_involvements REAL,
                    expected_goals REAL,
                    expected_goals_conceded REAL,
                    fixture INTEGER,
                    fixture_difficulty INTEGER,
                    goals_conceded INTEGER,
                    goals_scored INTEGER,
                    ict_index REAL,
                    influence REAL,
                    kickoff_time TEXT,
                    minutes INTEGER,
                    modified BOOLEAN,
                    opponent_team INTEGER,
                    own_goals INTEGER,
                    penalties_missed INTEGER,
                    penalties_saved INTEGER,
                    player_code INTEGER,
                    recoveries INTEGER,
                    round INTEGER,
                    saves INTEGER,
                    selected INTEGER,
                    season TEXT,
                    season_id INTEGER,
                    starts INTEGER,
                    team_a_score INTEGER,
                    team_h_score INTEGER,
                    total_points INTEGER,
                    tackles INTEGER,
                    threat REAL,
                    transfers_balance INTEGER,
                    transfers_in INTEGER,
                    transfers_out INTEGER,
                    value INTEGER,
                    was_home BOOLEAN,
                    xP REAL,
                    yellow_cards INTEGER,
                    UNIQUE (season, fixture, player_code)
                )''')
    c.execute('''CREATE TABLE IF NOT EXISTS fixtures (
                    id INTEGER,
                    code INTEGER,
                    event INTEGER,
                    finished BOOLEAN,
                    finished_provisional BOOLEAN,
                    kickoff_time TEXT,
                    minutes INTEGER,
                    provisional_start_time TEXT,
                    started BOOLEAN,
                    team_a INTEGER,
                    team_a_score INTEGER,
                    team_h INTEGER,
                    team_h_score INTEGER,
                    team_h_difficulty INTEGER,
                    team_a_difficulty INTEGER,
                    pulse_id INTEGER,
                    season TEXT,
                    PRIMARY KEY (id, season)
                )''')
    c.execute('''CREATE TABLE IF NOT EXISTS predictions (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    player_code INTEGER NOT NULL,
                    player_name TEXT,
                    team_name TEXT,
                    predicted_gw1_points REAL,
                    predicted_gw2_points REAL,
                    predicted_gw3_points REAL,
                    total_predicted_points REAL,
                    model_r2_score REAL,
                    matches_used INTEGER,
                    prediction_date TEXT,
                    season TEXT,
                    UNIQUE(player_code, season)
                )''')
    conn.commit()
    conn.close()
